import sqlite3
conn = sqlite3.connect("HospitalDB.db")

print("DATABASE CONNECTION SUCCESSFUL")

# Drop and recreate users table
conn.execute("DROP TABLE IF EXISTS USERS")
conn.execute("""
CREATE TABLE USERS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    USERNAME TEXT NOT NULL UNIQUE,
    PASSWORD TEXT NOT NULL,
    ROLE TEXT NOT NULL CHECK(ROLE IN ('admin', 'doctor', 'patient')),
    PATIENT_ID INTEGER,  -- Foreign key for patients
    EMP_ID TEXT,         -- Foreign key for employees (doctors)
    FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
)
""")
print("USERS TABLE CREATED SUCCESSFULLY")

# Drop and recreate PATIENT table
conn.execute("DROP TABLE IF EXISTS PATIENT")
conn.execute("""
CREATE TABLE PATIENT (
    PATIENT_ID INTEGER PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL,
    SEX VARCHAR(10) NOT NULL,
    BLOOD_GROUP VARCHAR(5) NOT NULL,
    DOB DATE NOT NULL,
    ADDRESS VARCHAR(100) NOT NULL,
    CONSULT_TEAM VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(20) NOT NULL
)
""")
print("PATIENT TABLE CREATED SUCCESSFULLY")

# Drop and recreate CONTACT_NO table
conn.execute("DROP TABLE IF EXISTS CONTACT_NO")
conn.execute("""
CREATE TABLE CONTACT_NO (
    PATIENT_ID INTEGER PRIMARY KEY,
    CONTACTNO INTEGER NOT NULL,
    ALT_CONTACT INTEGER,
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID)
)
""")
print("CONTACT_NO TABLE CREATED SUCCESSFULLY")

# Drop and recreate EMPLOYEE table
conn.execute("DROP TABLE IF EXISTS EMPLOYEE")
conn.execute("""
CREATE TABLE EMPLOYEE (
    EMP_ID VARCHAR(10) PRIMARY KEY,
    EMP_NAME VARCHAR(20) NOT NULL,
    SEX VARCHAR(10) NOT NULL,
    AGE INTEGER NOT NULL,
    DESIG VARCHAR(20) NOT NULL,
    SAL INTEGER NOT NULL,
    EXP VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(20) NOT NULL,
    PHONE INTEGER
)
""")
print("EMPLOYEE TABLE CREATED SUCCESSFULLY")

# Drop and recreate TREATMENT table
conn.execute("DROP TABLE IF EXISTS TREATMENT")
conn.execute("""
CREATE TABLE TREATMENT (
    PATIENT_ID INTEGER PRIMARY KEY,
    TREATMENT VARCHAR(100) NOT NULL,
    TREATMENT_CODE VARCHAR(30) NOT NULL,
    T_COST INTEGER NOT NULL,
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID)
)
""")
print("TREATMENT TABLE CREATED SUCCESSFULLY")

# Drop and recreate MEDICINE table
conn.execute("DROP TABLE IF EXISTS MEDICINE")
conn.execute("""
CREATE TABLE MEDICINE (
    PATIENT_ID INTEGER PRIMARY KEY,
    MEDICINE_NAME VARCHAR(100) NOT NULL,
    M_COST INTEGER NOT NULL,
    M_QTY INTEGER NOT NULL,
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID)
)
""")
print("MEDICINE TABLE CREATED SUCCESSFULLY")

# Drop and recreate ROOM table
conn.execute("DROP TABLE IF EXISTS ROOM")
conn.execute("""
CREATE TABLE ROOM (
    PATIENT_ID INTEGER NOT NULL,
    ROOM_NO VARCHAR(20) PRIMARY KEY,
    ROOM_TYPE VARCHAR(10) NOT NULL,
    RATE INTEGER NOT NULL,
    DATE_ADMITTED DATE,
    DATE_DISCHARGED DATE NULL,
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID)
)
""")
print("ROOM TABLE CREATED SUCCESSFULLY")

# Drop and recreate APPOINTMENT table
conn.execute("DROP TABLE IF EXISTS APPOINTMENT")
conn.execute("""
CREATE TABLE APPOINTMENT (
    PATIENT_ID INTEGER NOT NULL,
    EMP_ID VARCHAR(10) NOT NULL,
    AP_NO VARCHAR(10) PRIMARY KEY,
    AP_TIME TIME,
    AP_DATE DATE,
    DESCRIPTION VARCHAR(100),
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
)
""")
print("APPOINTMENT TABLE CREATED SUCCESSFULLY")

# Drop and recreate MEDICAL_RECORDS table
conn.execute("DROP TABLE IF EXISTS MEDICAL_RECORDS")
conn.execute("""
CREATE TABLE MEDICAL_RECORDS (
    RECORD_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    PATIENT_ID INTEGER NOT NULL,
    RECORD_DATE DATE NOT NULL,
    DIAGNOSIS TEXT NOT NULL,
    TREATMENT TEXT NOT NULL,
    PRESCRIPTION TEXT NOT NULL,
    FOREIGN KEY(PATIENT_ID) REFERENCES PATIENT(PATIENT_ID)
)
""")
print("MEDICAL_RECORDS TABLE CREATED SUCCESSFULLY")

# Create DOCTOR_SCHEDULE table
conn.execute("DROP TABLE IF EXISTS DOCTOR_SCHEDULE")
conn.execute("""
CREATE TABLE DOCTOR_SCHEDULE (
    SCHEDULE_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    EMP_ID VARCHAR(10) NOT NULL,
    DAY_OF_WEEK VARCHAR(10) NOT NULL,
    START_TIME TIME NOT NULL,
    END_TIME TIME NOT NULL,
    FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
)
""")
print("DOCTOR_SCHEDULE TABLE CREATED SUCCESSFULLY")

# Create NOTIFICATIONS table 
conn.execute("DROP TABLE IF EXISTS NOTIFICATIONS")
conn.execute("""
CREATE TABLE NOTIFICATIONS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT, 
    PATIENT_ID INTEGER, 
    EMP_ID TEXT, 
    MESSAGE TEXT NOT NULL, 
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
)
""")
print("NOTIFICATIONS TABLE CREATED SUCCESSFULLY")



conn.commit()
conn.close()
